<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.junsta.service.mapper.PostMapper">
	<select id="getAll" resultType="com.example.junsta.model.PostVO" parameterType="java.util.HashMap">
		select  * from post order by uploadDate desc limit #{startIndex}, #{limit}
	</select>
	<select id="getLikeCount" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) as count from `like` where postId=#{postId}
	</select>
	<select id="getFollowingUserList" resultType="java.lang.String" parameterType="java.lang.String">
		select followedUserId  from `follow` where followUserId=#{userId}
	</select>
	<select id="getPostByAuthor" resultType="java.lang.String">
		select * from post where uploadby=#{userId}
	</select>
	<select id="getImage" resultType="java.lang.String">
		select contents_pic from post where postId=#{postId}
	</select>
	
	<select id="getLike" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(*) as count from `like` where postId=#{postId} and userId=#{userId}
	</select>
	
	
	<insert id="uploadPost" parameterType="com.example.junsta.model.PostVO">
		insert into post(uploadBy, contents_pic, contents_text, uploadDate) values (#{uploadBy, jdbcType=VARCHAR}, #{contents_pic, jdbcType=VARCHAR}, #{contents_text, jdbcType=VARCHAR}, now());
	</insert>
	
	<insert id="insertLike" parameterType="java.util.HashMap">
		insert into `like`(postId, userId) values(#{postId}, #{userId})
	</insert>
	
	<delete id="deleteLike" parameterType="java.util.HashMap">
		delete from `like` where postId=#{postId} and userId=#{userId}
	</delete>
	<insert id="insertFollowing" parameterType="java.util.HashMap">
		insert into `follow`(followedUserId, followUserId) values(#{followedUserId}, #{followUserId})
	</insert>
	
	<delete id="deleteFollowing" parameterType="java.util.HashMap">
		delete from `follow` where followUserId=#{followUserId} and followedUserId=#{followedUserId}
	</delete>
	<select id="getFollowing" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(*) as count from `follow` where followUserId=#{followUserId} and followedUserId=#{followedUserId}
	</select>

<delete id="deletePost" parameterType="java.util.HashMap">
	delete from post where postId=#{postId}
</delete>
</mapper>
